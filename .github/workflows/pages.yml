# .github/workflows/pages.yml

name: Deploy Jekyll with Org Conversion to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Ruby and Install Jekyll Dependencies
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true # runs 'bundle install' and caches gems

      # Install Pandoc for Org-mode conversion
      - name: Install Pandoc
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq pandoc

      # Convert Org-mode files to Markdown with Jekyll front matter
      - name: Convert Org to Markdown
        run: |
          shopt -s nullglob
          for f in _posts/*.org; do
            if [ -f "$f" ]; then
              base=$(basename "$f" .org)
              output="_posts/${base}.md"
              
              # Convert org to markdown with standalone to get YAML front matter
              pandoc "$f" -f org -t markdown --standalone -o "$output"
              
              # Add layout field to front matter if it starts with ---
              if head -n 1 "$output" | grep -q '^---$'; then
                sed -i '1a layout: post' "$output"
              fi
              
              # Convert math delimiters from $ and $$ to \( \) and \[ \]
              # First, handle display math with newlines ($$\n...\n$$) -> \[...\]
              perl -i -0pe 's/\$\$\n([^\$]+?)\n\$\$/\\[\n$1\n\\]/gs' "$output"
              
              # Then handle inline display math ($$...$$) -> \[...\]
              perl -i -pe 's/\$\$(.+?)\$\$/\\[$1\\]/g' "$output"
              
              # Finally handle inline math ($...$) -> \(...\)
              perl -i -pe 's/(?<!\$)\$(?!\$)(.+?)(?<!\$)\$(?!\$)/\\($1\\)/g' "$output"
              
              echo "Converted $f to $output with LaTeX-style math delimiters"
            fi
          done

      # Setup GitHub Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Build with Jekyll
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      # Upload artifact for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
