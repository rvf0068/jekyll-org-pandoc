# .github/workflows/build.yml

name: Jekyll Build with Org Conversion

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  jekyll:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ----------------------------------------------------------------------
      # STEP 1: Setup Ruby and Install Jekyll Dependencies
      # Fixes the 'minima theme could not be found' error.
      # ----------------------------------------------------------------------
      - name: Setup Ruby and Install Dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true # This runs 'bundle install' and caches gems.

      # ----------------------------------------------------------------------
      # STEP 2: Convert Org-mode to Markdown using Pandoc Container
      # This step uses the pandoc container to run the conversion loop.
      # It also uses the corrected, unescaped Bash syntax.
      # ----------------------------------------------------------------------
      - name: Convert Org to Markdown using Pandoc
        uses: docker://pandoc/core:3.7
        with:
          args: |
            /bin/bash -c "
            # Set nullglob to make sure the loop is skipped if no files exist
            shopt -s nullglob
            
            for f in _posts/*.org; do
              # The nullglob option handles the case where no files exist, 
              # so the 'if' check is optional but harmless here.
              # We use 'if' for safety against literal unmatched globs in other environments.
              if [ -f \"$f\" ]; then
                  base=$(basename \"$f\" .org)
                  pandoc \"$f\" -f org -t gfm -o \"_posts/${base}.md\"
              fi
            done
            "
      # ----------------------------------------------------------------------
      # STEP 3: Build the Jekyll site
      # Uses 'bundle exec' to ensure the correct Jekyll version is run.
      # ----------------------------------------------------------------------
      - name: Build Jekyll site
        run: |
          # Use bundle exec to execute Jekyll with the installed gems
          bundle exec jekyll build --trace

      # ----------------------------------------------------------------------
      # STEP 4: (Optional) Deploy or Upload Artifacts
      # Add your deployment or artifact upload step here.
      # ----------------------------------------------------------------------
      - name: List built files (Optional Check)
        run: ls -R _site/

