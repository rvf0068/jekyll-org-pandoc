# .github/workflows/build.yml

name: Jekyll Build with Org Conversion

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  jekyll:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ----------------------------------------------------------------------
      # STEP 1: Setup Ruby and Install Jekyll Dependencies
      # Fixes the 'minima theme could not be found' error.
      # ----------------------------------------------------------------------
      - name: Setup Ruby and Install Dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true # This runs 'bundle install' and caches gems.

      # ----------------------------------------------------------------------
      # STEP 2: Install Pandoc for conversion
      # ----------------------------------------------------------------------
      - name: Install Pandoc
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq pandoc
      
      # ----------------------------------------------------------------------
      # STEP 3: Convert Org-mode to Markdown using Pandoc
      # This step converts org files to markdown with proper Jekyll front matter.
      # Uses --standalone to extract org metadata into YAML front matter.
      # Converts math delimiters to LaTeX style: \(...\) and \[...\]
      # ----------------------------------------------------------------------
      - name: Convert Org to Markdown
        run: |
          shopt -s nullglob
          for f in _posts/*.org; do
            if [ -f "$f" ]; then
              base=$(basename "$f" .org)
              output="_posts/${base}.md"
              
              # Convert org to markdown with standalone to get YAML front matter
              pandoc "$f" -f org -t markdown --standalone -o "$output"
              
              # Add layout field to front matter if it starts with ---
              if head -n 1 "$output" | grep -q '^---$'; then
                sed -i '1a layout: post' "$output"
              fi
              
              # Convert math delimiters from $ and $$ to \( \) and \[ \]
              # First, handle display math with newlines ($$\n...\n$$) -> \[...\]
              perl -i -0pe 's/\$\$\n([^\$]+?)\n\$\$/\\[\n$1\n\\]/gs' "$output"
              
              # Then handle inline display math ($$...$$) -> \[...\]
              perl -i -pe 's/\$\$(.+?)\$\$/\\[$1\\]/g' "$output"
              
              # Finally handle inline math ($...$) -> \(...\)
              perl -i -pe 's/(?<!\$)\$(?!\$)(.+?)(?<!\$)\$(?!\$)/\\($1\\)/g' "$output"
              
              echo "Converted $f to $output with LaTeX-style math delimiters"
            fi
          done
      # ----------------------------------------------------------------------
      # STEP 4: Build the Jekyll site
      # Uses 'bundle exec' to ensure the correct Jekyll version is run.
      # ----------------------------------------------------------------------
      - name: Build Jekyll site
        run: |
          # Use bundle exec to execute Jekyll with the installed gems
          bundle exec jekyll build --trace

      # ----------------------------------------------------------------------
      # STEP 5: (Optional) Deploy or Upload Artifacts
      # Add your deployment or artifact upload step here.
      # ----------------------------------------------------------------------
      - name: List built files (Optional Check)
        run: ls -R _site/

